http:
  routers:
    # =================
    # Public Routers
    # =================
    PublicRouter:
      entryPoints:
        - web
        - websecure
      service: backend
      rule: HostRegexp(`{{DOMAIN}}`, `{subdomain:[a-z]+}.{{DOMAIN}}`)
    ChallengeCheckRouter:
      entryPoints:
        - web
        - websecure
      service: backend
      rule: HostRegexp(`{subdomain:[a-z]+}.internal.{{DOMAIN}}`) && PathPrefix(`/.well-known/`)
    # =================
    # Internal Routers
    # =================
    InternalRouter:
      entryPoints:
        - web
        - websecure
      middlewares:
        - internal
      service: backend
      rule: HostRegexp(`{subdomain:[a-z]+}.internal.{{DOMAIN}}`)
    # =================
    # Meta (Internal) Routes
    # =================
    PrometheusInternalRouter:
      entryPoints:
        - web
      middlewares:
        - internal
      service: prometheus@internal
      rule: PathPrefix(`/metrics`)
    DashboardRouter:
      priority: 100
      entryPoints:
        - websecure
      middlewares:
        - internal
      service: api@internal
      rule: Host(`traefik.internal.{{DOMAIN}}`)
  services:
    backend:
      loadBalancer:
        servers:
          - url: http://{{BACKEND_IP}}:80
  middlewares:
    internal:
      ipWhiteList:
        sourceRange:
          - {{SUBNET_RANGE}}
tcp:
  routers:
    TCPDNSRouter:
      entrypoints:
        - tcpdns
      service: tcp-dns-backend
  services:
    tcp-dns-backend:
      loadBalancer:
        servers:
          - address: "{{DNS_IP}}:53"
udp:
  routers:
    UDPDNSRouter:
      entrypoints:
        - udpdns
      service: udp-dns-backend
  services:
    udp-dns-backend:
      loadBalancer:
        servers:
          - address: "{{DNS_IP}}:53"
